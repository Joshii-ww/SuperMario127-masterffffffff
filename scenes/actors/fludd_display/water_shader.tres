[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

const vec4 WATER_COLOR = vec4(0.19, 0.26, 0.79, 1);
const vec4 WATER_MIDDLE_TOP_COLOR = vec4(0.5, 0.67, 1, 1);
const vec4 WATER_TOP_COLOR = vec4(0.725, 0.89, 1, 1);
const vec4 WATER_BOTTOM_TOP_COLOR = vec4(0.26, 0.45, 0.88, 1);

uniform float water_height : hint_range(0.0f, 1.0f);

void fragment() {
	if (texture(TEXTURE, UV) == vec4(1, 1, 1, 1)) {
		float sine_height = (sin((UV.x * 7.5f) + TIME * 5.5f) / 60.5f) + ((water_height + 0.125f) / 1.25f);
		if (UV.y > sine_height) {
			if (UV.y < sine_height + 0.015f) {
				COLOR = WATER_TOP_COLOR;
			} else if (UV.y < sine_height + 0.035f) {
				COLOR = WATER_MIDDLE_TOP_COLOR;
			} else if (UV.y < sine_height + 0.075f) {
				COLOR = WATER_BOTTOM_TOP_COLOR;
			} else {
				COLOR = WATER_COLOR;
			}
		} else {
			COLOR = vec4(1, 1, 1 ,0);
		}
	} else {
		COLOR = vec4(0, 0, 0, 0)
	}
}"

[resource]
shader = SubResource( 1 )
shader_param/water_height = 0.0
